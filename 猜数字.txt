1.完成猜数字游戏。
#define _CRT_SECURE_NO_WARNINGS 1
#include <stdlib.h>
#include <stdio.h>
#include <time.h>
void main()
{
	int randomNumber, enterNumber;
	srand((unsigned)time(NULL)); //初始化随机数（范围是2的15次方即上限32767）
	randomNumber = rand() % 100 + 1;
	scanf("%d", &enterNumber);
	while (enterNumber != randomNumber)
	{
		if (enterNumber > randomNumber)
		{
			printf(" 大了\n");
		}
		if (enterNumber < randomNumber)
		{
			printf(" 小了\n");
		}
		scanf("%d", &enterNumber);
	}
	if (enterNumber == randomNumber)
		printf(" success");//1-100的随机数
	system("pause");

}
2.写代码可以在整型有序数组中查找想要的数字，找到了返回下标，找不到返回-1.（折半查找）
searching(int low, int high, int *a, int key)
{
	int mid = (low + high) / 2;
	while (low <= high)
	{
		if (a[mid] == key) return mid;
		if (a[mid] < key) low = mid + 1;
		if (a[mid] > key) high = mid - 1;
	}
	return -1;
}


#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <stdlib.h>
int main()
{
	int arr[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 };
	int left = 0;
	int right = sizeof(arr) / sizeof(arr[0]) - 1;
	int key = 7;
	int mid = 0;
	while (left <= right)
	{
		mid = (left + right) / 2;
		if (arr[mid] > key)
		{
			right = mid - 1;
		}
		else if (arr[mid] < key)
		{
			left = mid + 1;
		}
		else
			break;
	}
	if (left <= right)
	printf("找到了，下标是%d", mid);
	else
		printf("未找到");
	system("pause");
	return 0;
}
3.编写代码模拟三次密码输入的场景。
  最多能输入三次密码，密码正确，提示“登录成功”,密码错误，可以重新输入，最多输入三次。三次均错，则提示退出程序。
//输入1进入系统，再输入密码
#define  _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <windows.h>

int main()

{
	int i = 0;
	char password[20] = { 0 };
	for (i = 0; i < 3; i++)
	{
		printf("keyword");
		scanf("%s", password);
		if (strcmp(password, "5201314") == 0)
		{
			printf("登录成功\n");
			break;
		}
		else
			printf("密码错误，重新输入！\n");
		}
	if (i == 3)
		printf("三次密码都错，退出程序\n");

	system("pause");

	return 0;
}
#define  _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <windows.h>
secret(int password)
{
	int m;
	int input = 0;
	for (m = 0; m < 3; m++)
	{

		scanf("%d", &input);

		if (password == input)
			break;
		else
		{
			if (m < 2)
				printf("请重新输入,您还有%d次机会:\n", (-m + 2));
		}
	}

}
void menu()
{
	printf("**1.record**\n**0.exit**\n");

}
int main()
{
	menu();
	int input = 0;
	int password = 5201314;
	int i = 1;
	while (i)
	{
		scanf("%d", &input);
		switch (input)
		{
		case 1:
			secret(password);
			printf("线程1调试成功");

		case 0:
			break;
		default:
			printf("error");
		}
		i = 0;
	}
	system("pause");
	return 0;
}

//界面
#define  _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <windows.h>
//void menu()
//{
//	printf("**1.record**\n**0.exit**\n");
//
//}
int main()
{//menu（）;
	int input = 0;
	while (1)
	{
		scanf("%d", &input);
		switch (input)
		{
		case 1:
			//game();
			printf("线程1调试成功");
			break;
		case 0:
			break;
		default:
			printf("error");
		}
	} 
	system("pause");
	return 0;
}
4.编写一个程序，可以一直接收键盘字符，如果是小写字符就输出对应的大写字符，如果接收的是大写字符，就输出对应的小写字符，如果是数字不输出。
#define  _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <windows.h>
int main()
{
	char ch;
	
	do
	{
		ch = getchar();
		if (ch >= 'a'&&ch <= 'z')
			putchar(ch - 32);
		if (ch >= 'A'&&ch <= 'Z')
			putchar(ch + 32);
	} while (ch != '#');
	system("pause");
	return 0;
}